/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        homerow_mods: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        tapdance_cmd_cmdbacktick: tapdance_cmd_cmdbacktick {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_CMD_CMDBACKTICK";
            #binding-cells = <0>;
            bindings = <&kp LCMD>, <&kp LG(GRAVE)>;
        };

        tapdance_comma_tab: tapdance_comma_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_COMMA_TAB";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp TAB>;
        };
    };

    macros {
        harpoon1: harpoon1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp NUMBER_1>;
            label = "HARPOON1";
            wait-ms = <5>;
        };

        harpoon2: harpoon2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp NUMBER_2>;
            label = "HARPOON2";
            wait-ms = <5>;
        };

        harpoon3: harpoon3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp NUMBER_3>;
            label = "HARPOON3";
            wait-ms = <5>;
        };

        harpoon4: harpoon4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp NUMBER_4>;
            label = "HARPOON4";
            wait-ms = <5>;
        };

        tmux_next_session: tmux_next_session {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp RIGHT_PARENTHESIS>;
            label = "TMUX_NEXT_SESSION";
            wait-ms = <5>;
        };

        tmux_prev_session: tmux_prev_session {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp LEFT_PARENTHESIS>;
            label = "TMUX_PREV_SESSION";
            wait-ms = <5>;
        };

        tmux_next_window: tmux_next_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp N>;
            label = "TMUX_NEXT_WINDOW";
            wait-ms = <5>;
        };

        tmux_prev_window: tmux_prev_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp N>;
            label = "TMUX_PREV_WINDOW";
            wait-ms = <5>;
        };
    };

    combos {
        compatible = "zmk,combos";

        mo_layer2 {
            bindings = <&mo 2>;
            key-positions = <31 32>;
            layers = <0>;
        };

        mo_layer3 {
            bindings = <&mo 3>;
            key-positions = <31 30>;
            layers = <0>;
        };

        mo_layer4 {
            bindings = <&mo 4>;
            key-positions = <30 32>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none      &kp N1                 &kp N2                     &kp N3                     &kp N4                     &kp N5                 &kp LC(LS(TAB))                                                  &kp LC(TAB)         &kp N6                 &kp N7     &kp N8                     &kp N9                     &kp N0            &kp LG(PLUS)
&kp TAB    &kp Q                  &homerow_mods LG(W) W      &kp E                      &homerow_mods LG(LS(R)) R  &homerow_mods LG(T) T  &tmux_prev_window                                                &tmux_next_window   &homerow_mods LC(Y) Y  &kp U      &homerow_mods LG(LA(I)) I  &kp O                      &kp P             &kp LG(MINUS)
&kp ESC    &kp A                  &homerow_mods LG(S) S      &kp D                      &homerow_mods LA(LS(F)) F  &kp G                  &tmux_prev_session  &kp LCTRL       &none      &none  &kp RCTRL  &tmux_next_session  &kp H                  &kp J      &kp K                      &kp L                      &kp BACKSPACE     &kp GRAVE
&kp LSHFT  &homerow_mods LG(Z) Z  &homerow_mods LG(X) X      &homerow_mods LG(C) C      &homerow_mods LG(V) V      &kp B                                                      &none      &none                                 &kp N                  &kp M      &tapdance_comma_tab        &kp DOT                    &kp LA(NUMBER_1)  &kp RSHFT
&none      &kp LEFT_ALT           &tapdance_cmd_cmdbacktick  &tapdance_cmd_cmdbacktick  &kp LCTRL                                         &mo 1               &kp LEFT_SHIFT  &mo 3      &mo 3  &kp ENTER  &kp SPACE                                  &kp LC(B)  &tapdance_cmd_cmdbacktick  &tapdance_cmd_cmdbacktick  &kp RIGHT_ALT     &none
            >;
        };

        code {
            bindings = <
&none  &kp EXCLAMATION     &kp AT_SIGN        &kp HASH              &kp DOLLAR          &kp PERCENT       &trans                                                     &none                  &kp CARET          &kp AMPERSAND          &kp ASTERISK           &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS  &trans
&none  &kp EXCLAMATION     &kp AT_SIGN        &kp HASH              &kp DOLLAR          &kp PERCENT       &none                                                      &none                  &kp CARET          &kp MINUS              &kp UNDERSCORE         &kp AMPERSAND          &kp ASTERISK           &trans
&none  &kp SLASH           &kp LESS_THAN      &kp LEFT_PARENTHESIS  &kp LEFT_BRACE      &kp LEFT_BRACKET  &none   &trans  &trans      &trans  &trans                 &kp LA(LS(LC(LG(F))))  &kp RIGHT_BRACKET  &kp RIGHT_BRACE        &kp RIGHT_PARENTHESIS  &kp GREATER_THAN       &kp BACKSLASH          &trans
&none  &kp TILDE           &kp GRAVE          &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES   &kp EQUAL                         &trans      &trans                                                &kp PLUS           &kp COLON              &kp SEMICOLON          &kp QUESTION           &kp PIPE               &trans
&none  &tmux_prev_session  &tmux_prev_window  &tmux_next_window     &tmux_next_session                    &trans  &trans  &trans      &trans  &kp LA(LS(LG(LC(K))))  &kp LA(LS(LC(LG(C))))                     &kp LA(LS(LC(LG(T))))  &kp LA(LC(LS(LG(O))))  &kp LA(LS(LC(LG(V))))  &kp LA(LS(LC(LG(X))))  &none
            >;
        };

        navigation {
            bindings = <
&none  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none  &none   &none  &none                                       &kp C_PREV  &kp C_PLAY_PAUSE    &kp C_NEXT          &kp C_MUTE           &kp C_VOLUME_DOWN    &kp C_VOLUME_UP     &none
&none  &none                 &none                 &none  &none   &none  &none                                       &none       &kp LG(LEFT_ARROW)  &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &kp LG(RIGHT_ARROW)  &none               &none
&none  &none                 &none                 &none  &trans  &none  &none   &trans  &trans      &trans  &trans  &none       &kp LEFT_ARROW      &kp DOWN_ARROW      &kp UP_ARROW         &kp RIGHT_ARROW      &kp BACKSPACE       &none
&none  &none                 &none                 &none  &none   &none                  &trans      &trans                      &trans              &harpoon1           &harpoon2            &harpoon3            &harpoon4           &none
&none  &none                 &none                 &none  &none          &trans  &trans  &trans      &trans  &trans  &kp LC(E)                       &tmux_prev_session  &tmux_prev_window    &tmux_next_window    &tmux_next_session  &none
            >;
        };

        numbers {
            bindings = <
&bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR  &bt BT_CLR_ALL                                  &trans        &none         &none         &none         &none         &none      &none
&bl BL_TOG       &bl BL_DEC       &bl BL_INC    &none         &none         &none       &none                                           &none         &kp LG(PLUS)  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS  &none
&rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &none         &none         &none         &none       &bootloader     &none  &none      &none  &none  &bootloader   &kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH  &none
&none            &none            &none         &none         &none         &none                              &none      &none                       &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COMMA  &none
&none            &none            &none         &none         &none                     &none           &none  &none      &none  &none  &kp NUMBER_0                &kp NUMBER_0  &none         &none         &none      &none
            >;
        };

        window_manager {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans             &trans         &trans         &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans             &trans         &trans         &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LC(LA(LS(H)))  &kp LA(LS(J))  &kp LA(LS(K))  &kp LC(LA(LS(L)))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans             &trans         &trans         &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                     &trans         &trans         &trans             &trans  &trans
            >;
        };
    };
};
