/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none      &kp N1        &kp N2          &kp N3     &kp N4  &kp N5  &none                                                               &none      &kp N6  &kp N7     &kp N8     &kp N9     &kp N0            &none
&kp TAB    &kp Q         &kp W           &kp E      &kp R   &kp T   &none                                                               &none      &kp Y   &kp U      &kp I      &kp O      &kp P             &none
&kp ESC    &kp A         &kp S           &kp D      &kp F   &kp G   &none  &kp LCMD  &none                 &kp LGUI          &none      &none      &kp H   &kp J      &kp K      &kp L      &kp BACKSPACE     &none
&kp LSHFT  &kp Z         &kp X           &kp C      &kp V   &kp B                    &none                 &none                                   &kp N   &kp M      &kp COMMA  &kp DOT    &kp LA(NUMBER_1)  &kp RSHFT
&none      &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL  &mo 3           &mo 1  &mo 2     &kp LS(LEFT_ALT)      &kp LS(LEFT_ALT)  &kp ENTER  &kp SPACE          &kp LC(B)  &kp RCTRL  &kp RSHFT  &kp RIGHT_ALT     &none
            >;
        };

        layer_keypad {
            bindings = <
&none  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH              &kp DOLLAR         &kp PERCENT       &trans                                      &none   &kp CARET          &kp AMPERSAND    &kp ASTERISK           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&none  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH              &kp DOLLAR         &kp PERCENT       &none                                       &none   &kp CARET          &kp MINUS        &kp UNDERSCORE         &kp AMPERSAND         &kp ASTERISK           &trans
&none  &kp SLASH        &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE     &kp LEFT_BRACKET  &none   &trans  &trans      &trans  &trans  &none   &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN      &kp BACKSLASH          &trans
&none  &kp TILDE        &kp GRAVE      &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES  &kp EQUAL                         &trans      &trans                  &kp PLUS           &kp COLON        &kp SEMICOLON          &kp QUESTION          &kp PIPE               &trans
&none  &trans           &trans         &trans                &trans                               &trans  &trans  &trans      &trans  &kp F1  &kp F2                     &kp F3           &kp F4                 &kp F5                &trans                 &none
            >;
        };

        layer_fn {
            bindings = <
&none  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none  &none           &none  &none                                       &kp C_PREV  &kp C_PLAY_PAUSE    &kp C_NEXT          &kp K_MUTE           &kp C_VOLUME_DOWN    &kp C_VOLUME_UP  &none
&none  &none                 &none                 &none  &none           &none  &none                                       &none       &kp LG(LEFT_ARROW)  &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &kp LG(RIGHT_ARROW)  &none            &none
&none  &none                 &none                 &none  &kp LEFT_SHIFT  &none  &none   &trans  &trans      &trans  &trans  &none       &kp LEFT_ARROW      &kp DOWN_ARROW      &kp UP_ARROW         &kp RIGHT_ARROW      &kp BACKSPACE    &none
&none  &none                 &none                 &none  &none           &none                  &trans      &trans                      &trans              &none               &none                &none                &none            &none
&none  &none                 &none                 &none  &none                  &trans  &trans  &trans      &trans  &trans  &trans                          &none               &none                &none                &none            &none
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
